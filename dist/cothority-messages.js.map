{"version":3,"file":"cothority-messages.js","sources":["../src/models/skeleton.js","../src/models/root.js","../src/cothority-protobuf.js","../src/index.js"],"sourcesContent":["export default '{\"nested\":{\"cothority\":{},\"BlockLink\":{\"fields\":{\"Hash\":{\"rule\":\"required\",\"type\":\"bytes\",\"id\":1},\"Signature\":{\"rule\":\"required\",\"type\":\"bytes\",\"id\":2}}},\"LatestBlockRequest\":{\"fields\":{\"LatestID\":{\"rule\":\"required\",\"type\":\"bytes\",\"id\":1}}},\"LatestBlockResponse\":{\"fields\":{\"Update\":{\"rule\":\"repeated\",\"type\":\"SkipBlock\",\"id\":1,\"options\":{\"packed\":false}}}},\"Roster\":{\"fields\":{\"id\":{\"type\":\"bytes\",\"id\":1},\"list\":{\"rule\":\"repeated\",\"type\":\"ServerIdentity\",\"id\":2,\"options\":{\"packed\":false}},\"aggregate\":{\"type\":\"bytes\",\"id\":3}}},\"ServerIdentity\":{\"fields\":{\"public\":{\"rule\":\"required\",\"type\":\"bytes\",\"id\":1},\"id\":{\"rule\":\"required\",\"type\":\"bytes\",\"id\":2},\"address\":{\"rule\":\"required\",\"type\":\"string\",\"id\":3},\"description\":{\"rule\":\"required\",\"type\":\"string\",\"id\":4}}},\"SignatureRequest\":{\"fields\":{\"message\":{\"rule\":\"required\",\"type\":\"bytes\",\"id\":1},\"roster\":{\"rule\":\"required\",\"type\":\"Roster\",\"id\":2}}},\"SignatureResponse\":{\"fields\":{\"hash\":{\"rule\":\"required\",\"type\":\"bytes\",\"id\":1},\"signature\":{\"rule\":\"required\",\"type\":\"bytes\",\"id\":2}}},\"SkipBlock\":{\"fields\":{\"test\":{\"type\":\"sint32\",\"id\":1},\"Height\":{\"type\":\"sint32\",\"id\":2},\"MaximumHeight\":{\"type\":\"sint32\",\"id\":3},\"BaseHeight\":{\"type\":\"sint32\",\"id\":4},\"BackLinkIDs\":{\"rule\":\"repeated\",\"type\":\"bytes\",\"id\":5,\"options\":{\"packed\":false}},\"VerifierIDs\":{\"rule\":\"repeated\",\"type\":\"bytes\",\"id\":6,\"options\":{\"packed\":false}},\"ParentBlockID\":{\"type\":\"bytes\",\"id\":7},\"GenesisID\":{\"type\":\"bytes\",\"id\":8},\"Data\":{\"type\":\"bytes\",\"id\":9},\"Roster\":{\"type\":\"Roster\",\"id\":10},\"Hash\":{\"type\":\"bytes\",\"id\":11},\"ForwardLink\":{\"rule\":\"repeated\",\"type\":\"BlockLink\",\"id\":12,\"options\":{\"packed\":false}},\"ChildSL\":{\"type\":\"bytes\",\"id\":13}}},\"StatusResponse\":{\"fields\":{\"system\":{\"keyType\":\"string\",\"type\":\"Status\",\"id\":1},\"server\":{\"type\":\"ServerIdentity\",\"id\":2}},\"nested\":{\"Status\":{\"fields\":{\"field\":{\"keyType\":\"string\",\"type\":\"string\",\"id\":1}}}}},\"StoreSkipBlockRequest\":{\"fields\":{\"LatestID\":{\"rule\":\"required\",\"type\":\"bytes\",\"id\":1},\"NewBlock\":{\"rule\":\"required\",\"type\":\"SkipBlock\",\"id\":2}}},\"StoreSkipBlockResponse\":{\"fields\":{\"Previous\":{\"rule\":\"required\",\"type\":\"SkipBlock\",\"id\":1},\"Latest\":{\"rule\":\"required\",\"type\":\"SkipBlock\",\"id\":2}}}}}';","import protobuf from \"protobufjs\";\nimport skeleton from './skeleton'\nconst {Root} = protobuf;\n\nconst root = Root.fromJSON(JSON.parse(skeleton));\n\nexport default root;","import Root from './models/root'\n\nexport default class CothorityProtobuf {\n  \n  constructor() {\n    this.root = Root;\n  }\n  \n  /**\n   * Encode a model to be transmitted over websocket\n   * @param name\n   * @param fields\n   * @returns {*|Buffer|Uint8Array}\n   */\n  encodeMessage(name, fields) {\n    const model = this.getModel(name);\n    \n    // Create the message with the model\n    const msg = model.create(fields);\n\n    // Encode the message in a BufferArray\n    return model.encode(msg).finish();\n  }\n  \n  /**\n   * Decode a message coming from a websocket\n   * @param name\n   * @param buffer\n   */\n  decodeMessage(name, buffer) {\n    const model = this.getModel(name);\n    return model.decode(buffer);\n  }\n  \n  /**\n   * Return the protobuf loaded model\n   * @param name\n   * @returns {ReflectionObject|?ReflectionObject|string}\n   */\n  getModel(name) {\n    return this.root.lookup(`${name}`);\n  }\n}\n","import CothorityProtobuf from './cothority-protobuf'\n\nclass CothorityMessages extends CothorityProtobuf {\n  \n  /**\n   * Create an encoded message to make a sign request to a cothority node\n   * @param message to sign stored in a Uint8Array\n   * @param servers list of ServerIdentity\n   * @returns {*|Buffer|Uint8Array}\n   */\n  createSignatureRequest(message, servers) {\n    if (!(message instanceof Uint8Array)) {\n      throw new Error(\"message must be a instance of Uint8Array\");\n    }\n    \n    const fields = {\n      message,\n      roster: {\n        list: servers\n      }\n    };\n    \n    return this.encodeMessage('SignatureRequest', fields);\n  }\n  \n  /**\n   * Return the decoded response\n   * @param response\n   * @returns {*}\n   */\n  decodeSignatureResponse(response) {\n    response = new Uint8Array(response);\n\n    return this.decodeMessage('SignatureResponse', response);\n  }\n  \n  /**\n   * Return the decoded response\n   * @param response\n   * @returns {*}\n   */\n  decodeStatusResponse(response) {\n    response = new Uint8Array(response);\n\n    return this.decodeMessage('StatusResponse', response);\n  }\n\n  createStoreSkipBlockRequest(id, servers) {\n    if (!(id instanceof Uint8Array)) {\n      throw new Error(\"message must be a instance of Uint8Array\");\n    }\n\n    return this.encodeMessage('StoreSkipBlockRequest', {\n      LatestID: id,\n      NewBlock: {\n        MaximumHeight: 1,\n        BaseHeight: 1,\n        Data: new Uint8Array([]),\n        Roster: {\n          list: servers\n        }\n      }\n    });\n  }\n\n  decodeStoreSkipBlockResponse(response) {\n    response = new Uint8Array(response);\n\n    return this.decodeMessage('StoreSkipBlockResponse', response);\n  }\n\n  createLatestBlockRequest(id) {\n    if (!(id instanceof Uint8Array)) {\n      throw new Error(\"message must be a instance of Uint8Array\");\n    }\n\n    return this.encodeMessage('LatestBlockRequest', {\n      LatestID: id\n    });\n  }\n\n  decodeLatestBlockResponse(response) {\n    response = new Uint8Array(response);\n\n    return this.decodeMessage('LatestBlockResponse', response);\n  }\n  \n}\n\nexport default new CothorityMessages();"],"names":["Root"],"mappings":"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"}